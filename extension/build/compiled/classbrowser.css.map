{
  "version": 3,
  "file": "classbrowser.css",
  "sources": [
    "ClassBrowser.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import { onMount } from \"svelte\";\n;\nlet classResults = [];\nlet searchQueryInput;\nlet searchQuery = \"\";\nonMount(async () => {\n    // this is used to recieve message from sidebar provider\n    window.addEventListener(\"message\", async (event) => {\n        const message = event.data;\n        switch (message.type) {\n            case \"class-result\": {\n                classResults = message.value;\n                break;\n            }\n            case \"partial-class-result\": {\n                // append\n                classResults = classResults.concat(message.value);\n                // remove duplicates\n                classResults = classResults.filter((value, index, self) => index === self.findIndex((t) => (t.name === value.name)));\n                break;\n            }\n        }\n    });\n    // setTimeout(() => searchAll(), 3000)\n    // this is used to send message to provider\n    // tsvscode.postMessage({ type: \"get-token\", value: undefined });\n    // searchQueryInput.focus()\n});\nfunction post(message) {\n    tsvscode.postMessage(message);\n}\nfunction search(queryAction) {\n    post({\n        type: \"search-\" + queryAction.type,\n        value: queryAction.value\n    });\n}\nfunction searchClass(query) {\n    search(\"class\", query);\n}\nfunction searchMethod(query) {\n    post({ type: \"search-method\", value: query });\n}\nfunction searchAll() {\n    post({ type: \"search-all\", value: searchQuery });\n}\nfunction open(query) {\n    post({ type: \"open\", value: query });\n}\nfunction color(kind) {\n    switch (kind) {\n        case \"Interface\":\n            return \"yellow\";\n        case \"Class\":\n            return \"aqua\";\n        case \"Struct\":\n            return \"orange\";\n        default:\n            return \"white\";\n    }\n}\n</script>\n\n<div class=\"main\">\n<input bind:this={searchQueryInput} bind:value={searchQuery} on:input={() => {\n    if (searchQuery === \"*\") \n        searchAll()\n    else if (searchQuery.length > 1) \n        searchClass(searchQuery)\n}} class=\"query-input\"/>\n<div class=\"browse\">\n<ul class=\"class-browse\">\n\t{#each classResults as classType}\n\t\t<li style={`color: ${color(classType?.kind.toString())};`}>\n            <button class=\"symbol\" \n                title={classType?.kind.toString() + \" \" + classType?.name}\n                on:click={() => {\n                post({\n                    type: \"open\",\n                    value: {\n                        path: classType?.location?.uri?.path,\n                        position: classType?.location?.range[0]\n                    }\n                })\n            }}>\n                <span class=\"class\">{classType.name}</span>\n                <span class=\"container\">{classType?.containerName || \"\"}</span>\n            </button>\n        </li>\n\t{/each}\n</ul>\n</div>\n</div>\n\n<style>\n    ul {\n        list-style-type: square;\n        list-style-position: inside;\n    }\n    li {\n        color: rgb(173, 40, 42);\n    }\n    .symbol {\n        text-align: left;\n        background-color: transparent;\n        font-size: 1rem;\n        width: max-content;\n    }\n    .symbol:hover {\n        background-color: rgb(59, 125, 168);\n    }\n    .class {\n        text-align: left;\n    }\n    .container {\n        text-align: right;\n        color: gray;\n        text-overflow: ellipsis;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "AA+FI,EAAE,eAAC,CAAC,AACA,eAAe,CAAE,MAAM,CACvB,mBAAmB,CAAE,MAAM,AAC/B,CAAC,AACD,EAAE,eAAC,CAAC,AACA,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AAC3B,CAAC,AACD,OAAO,eAAC,CAAC,AACL,UAAU,CAAE,IAAI,CAChB,gBAAgB,CAAE,WAAW,CAC7B,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,WAAW,AACtB,CAAC,AACD,sBAAO,MAAM,AAAC,CAAC,AACX,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACvC,CAAC,AACD,MAAM,eAAC,CAAC,AACJ,UAAU,CAAE,IAAI,AACpB,CAAC,AACD,UAAU,eAAC,CAAC,AACR,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,QAAQ,AAC3B,CAAC"
}